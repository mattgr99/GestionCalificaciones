/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectogestion_calificaciones;

import Atxy2k.CustomTextField.RestrictedTextField;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author matgr
 */
public class FrmGestionAlumnoAdm extends javax.swing.JFrame {

    /**
     * Creates new form FrmGestionAlumnoAdm
     */
    public FrmGestionAlumnoAdm() {
        initComponents();
        txtId.setVisible(false);
        btnRegresar.setVisible(false);
        RestrictedTextField r = new RestrictedTextField(txtcedula);
        r.setLimit(10);
        RestrictedTextField l1 = new RestrictedTextField(txtnif);
        l1.setLimit(9);
        RestrictedTextField l2 = new RestrictedTextField(txtcalificaciones);
        l2.setLimit(5);
        RestrictedTextField l3 = new RestrictedTextField(txtClave);
        l3.setLimit(9);
        //   RestrictedTextField p=new RestrictedTextField(txtClave);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPNregistrar = new javax.swing.JPanel();
        lblCedula = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtnac = new javax.swing.JTextField();
        txtcedula = new javax.swing.JTextField();
        JBTguardar = new javax.swing.JButton();
        lblFechaNac1 = new javax.swing.JLabel();
        txttelefono = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        Modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lblFechaNac2 = new javax.swing.JLabel();
        LBLusuarios = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnif = new javax.swing.JTextField();
        lblCedula1 = new javax.swing.JLabel();
        txtcalificaciones = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        JPNregistrar.setBackground(new java.awt.Color(255, 255, 255));

        lblCedula.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblCedula.setText("#Cédula:");

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        lblFechaNac.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac.setText("Fecha Nacimiento:");

        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });
        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnombreKeyTyped(evt);
            }
        });

        txtnac.setToolTipText("AAAA-MM-DD");
        txtnac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnacActionPerformed(evt);
            }
        });
        txtnac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnacKeyTyped(evt);
            }
        });

        txtcedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcedulaActionPerformed(evt);
            }
        });
        txtcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcedulaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcedulaKeyTyped(evt);
            }
        });

        JBTguardar.setText("Registrar");
        JBTguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTguardarActionPerformed(evt);
            }
        });

        lblFechaNac1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac1.setText("Teléfono:");

        txttelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttelefonoActionPerformed(evt);
            }
        });
        txttelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttelefonoKeyTyped(evt);
            }
        });

        jLabel1.setText("Ingrese el nif del alumno:");

        txtClave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClaveKeyTyped(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtId.setBackground(java.awt.SystemColor.control);
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.setCaretColor(new java.awt.Color(255, 255, 255));
        txtId.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtId.setEnabled(false);

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        eliminar.setText("Dar de baja");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jButton1.setText("!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblFechaNac2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblFechaNac2.setText("AAAA-MM-DD");

        LBLusuarios.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        LBLusuarios.setText("            Alumno");

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setText("Nif:");

        txtnif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnifActionPerformed(evt);
            }
        });
        txtnif.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnifKeyTyped(evt);
            }
        });

        lblCedula1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        lblCedula1.setText("Calificación de grado:");

        txtcalificaciones.setToolTipText("AAAA-MM-DD");
        txtcalificaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcalificacionesActionPerformed(evt);
            }
        });
        txtcalificaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcalificacionesKeyTyped(evt);
            }
        });

        btnRegresar.setText("Regresar");

        javax.swing.GroupLayout JPNregistrarLayout = new javax.swing.GroupLayout(JPNregistrar);
        JPNregistrar.setLayout(JPNregistrarLayout);
        JPNregistrarLayout.setHorizontalGroup(
            JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(LBLusuarios)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(73, 73, 73)
                .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPNregistrarLayout.createSequentialGroup()
                        .addComponent(JBTguardar)
                        .addGap(74, 74, 74)
                        .addComponent(Modificar)
                        .addGap(79, 79, 79)
                        .addComponent(eliminar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(JPNregistrarLayout.createSequentialGroup()
                        .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFechaNac1)
                            .addComponent(lblFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCedula)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCedula1))
                        .addGap(53, 53, 53)
                        .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPNregistrarLayout.createSequentialGroup()
                                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnac, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22))
                                    .addGroup(JPNregistrarLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)
                                        .addGap(41, 41, 41)
                                        .addComponent(lblFechaNac2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(JPNregistrarLayout.createSequentialGroup()
                                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtcalificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnif, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(196, 196, 196))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPNregistrarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addContainerGap())
        );
        JPNregistrarLayout.setVerticalGroup(
            JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPNregistrarLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(LBLusuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(40, 40, 40)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaNac1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(lblFechaNac2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcalificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(JPNregistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBTguardar)
                    .addComponent(Modificar)
                    .addComponent(eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(JPNregistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPNregistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void txtnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyTyped

        if (validaIngresos(evt, 1)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta numeros");
        }
    }//GEN-LAST:event_txtnombreKeyTyped

    private void txtnacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnacActionPerformed

    private void txtnacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnacKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }

    }//GEN-LAST:event_txtnacKeyTyped
    /*private void txtcalificacionesKeyTyped(java.awt.event.KeyEvent evt) {                                
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }

    }*/
    private void txtcedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcedulaActionPerformed
    private void txtnifKeyReleased(java.awt.event.KeyEvent evt) {
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM gestion_alumnos WHERE Nif = ?");
            ps.setString(1, txtnif.getText());

            rs = ps.executeQuery();

            if (rs.next()) {

                txtId.setText(txtnif.getText());

            } else {
                //JOptionPane.showMessageDialog(null, "Usuario no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }
    }
    private void txtcedulaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyReleased

    }//GEN-LAST:event_txtcedulaKeyReleased

    private void txtcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcedulaKeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtcedulaKeyTyped

    private void JBTguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTguardarActionPerformed
        PreparedStatement ps = null;
        int num, contador = 1;
        String fa = txtnac.getText();
        String[] partesfa = fa.split("-");
        int an;
        String comp = txtId.getText();
        System.out.println(comp);
        if ("".equals(fa)) {
            an = 1960;
        }

        //int Fila = tablausuarios.getSelectedRow();
        String comp1 = "";
        System.out.println(comp);
        if ("".equals(comp)) {
            comp = ".";
        }
        if ((comp1.equals(txtcedula.getText())) || (comp1.equals(txtnombre.getText())) || (comp1.equals(txttelefono.getText())) || (comp1.equals(txtnac.getText())) || (comp1.equals(txtnif.getText())) || (comp1.equals(txtcalificaciones.getText()))) {
            JOptionPane.showMessageDialog(null, "Porfavor llene todos los campos");
        } else {
            if ((comp.equals(txtnif.getText()))) {
                JOptionPane.showMessageDialog(null, "El alumno ya se encuentra registrado");
            } else {
                num = Integer.parseInt(txtcedula.getText());
                while (num / 10 > 0) {
                    num = num / 10;
                    contador++;
                }
                an = Integer.parseInt(partesfa[0]);
                if (((an > 1959) && (an < 2000)) && (contador == 10)) {
                    try {
                        Conexion objCon = new Conexion();
                        Connection conn = objCon.getConexion();
                        Alumno p = new Alumno();
                        ps = conn.prepareStatement("INSERT INTO gestion_alumnos (Nif,Nombre,Cedula , Telefono,Fecha_nac,Calificacion_grado) VALUES (?,?,?,?,?,?)");
                        p.setNif(txtnif.getText());
                        ps.setString(1, p.getNif());
                        p.setCedula(txtcedula.getText());
                        ps.setString(2, p.getCedula());
                        p.setNombre(txtnombre.getText());
                        ps.setString(3, p.getNombre());
                        p.setTelefono(txttelefono.getText());
                        ps.setString(4, p.getTelefono());
                        p.setFechanac(txtnac.getText());
                        ps.setString(5, p.getFechanac());
                        p.setNota_grado(txtcalificaciones.getText());
                        ps.setString(6, p.getNota_grado());

                        ps.execute();
                        JOptionPane.showMessageDialog(null, "Alumno Registrado");

                        limpiar();

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error al registrar alumno\n(Formato fecha:AAAA-MM-DD)");
                        System.out.println(ex);
                    }
                } else {
                    if (an <= 1959) {
                        //JOptionPane.showMessageDialog(null, "El a no puede tener \nuna edad mayor a 59 años");
                    }
                    if (contador != 10) {
                        JOptionPane.showMessageDialog(null, "La cédula debe tener 10 dígitos");
                    }
                }

            }

            //   tabla();
        }
    }//GEN-LAST:event_JBTguardarActionPerformed

    private void txttelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttelefonoActionPerformed

    private void txttelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttelefonoKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txttelefonoKeyTyped

    private void txtClaveKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClaveKeyTyped


    }//GEN-LAST:event_txtClaveKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        //  RestrictedTextField r = new RestrictedTextField(txtcedula);
        //   RestrictedTextField p=new RestrictedTextField(txtClave);

        // p.setLimit(10);
        //p.setOnlyNums(true);
        PreparedStatement ps = null;
        ResultSet rs = null;
        Conexion conn = new Conexion();

        try {

            java.sql.Connection con = conn.getConexion();
            ps = con.prepareStatement("SELECT * FROM gestion_alumnos WHERE Nif = ?");
            ps.setString(1, txtClave.getText());

            rs = ps.executeQuery();

            if (rs.next()) {
                txtnif.setText(rs.getString("Nif"));
                txtcedula.setText(rs.getString("Cedula"));
                txtnombre.setText(rs.getString("Nombre"));
                txttelefono.setText(rs.getString("Telefono"));
                txtcalificaciones.setText(rs.getString("Calificacion_grado"));

                txtnac.setText(rs.getString("Fecha_nac"));
                txtId.setText(txtClave.getText());

            } else {
                JOptionPane.showMessageDialog(null, "Alumno no encontrado");
            }

        } catch (Exception e) {
            System.err.println(e);
        }

        txtClave.setText("");
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // Conexion conn = new Conexion();
        PreparedStatement ps = null;
        //  int Fila = tablausuarios.getSelectedRow();
        if (("".equals(txtcedula.getText())) || ("".equals(txtnombre.getText())) || ("".equals(txttelefono.getText())) || ("".equals(txtnac.getText())) || ("".equals(txtnif.getText()))) {
            JOptionPane.showMessageDialog(null, "Todos los campos deben estar llenos");
        } else {
            try {
                Conexion objCon = new Conexion();
                com.mysql.jdbc.Connection conn = objCon.getConexion();

                ps = conn.prepareStatement("UPDATE gestion_alumnos SET Nombre=?, Telefono=?, Fecha_nac=?,Calificacion_grado=? WHERE nif=?");
                Alumno p = new Alumno();
                p.setNombre(txtnombre.getText());
                ps.setString(1, p.getNombre());
                p.setTelefono(txttelefono.getText());
                ps.setString(2, p.getTelefono());
                p.setFechanac(txtnac.getText());
                ps.setString(3, p.getFechanac());
                p.setNota_grado(txtcalificaciones.getText());
                ps.setString(4, p.getNota_grado());
                p.setNif(txtnif.getText());
                ps.setString(5, p.getNif());
                ps.execute();
                JOptionPane.showMessageDialog(null, "Alumno Modificado");

                limpiar();

                //   conn.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al Modificar Alumno");
                System.err.println(ex);
            }
        }
        // tabla();
    }//GEN-LAST:event_ModificarActionPerformed
    private void buscarA() {
        int i = 0;
        //
        String elim;
        try {
            // jtNotas.setModel(modelo);

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            // Connection conn = objCon.getConexion();
            java.sql.Connection con = conn.getConexion();
//ps = conn.prepareStatement("SELECT codigo, nombre, precio, cantidad FROM producto WHERE codigo=?");

            //rs = ps.executeQuery();
            String sql = "SELECT *FROM acta WHERE Nif = ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, txtnif.getText());
            rs = ps.executeQuery();

            while (rs.next()) {
                elim = rs.getString("Id");
                System.out.println(elim);
                eliminaracta(elim);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

    }

    private void eliminaracta(String elim) {

        PreparedStatement ps = null;
        // txtId.setText("");
        //int Fila = tablausuarios.getSelectedRow();
        String comp = txtId.getText();
        //int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea dar de baja a este alumno?", "Confirmación", JOptionPane.YES_NO_OPTION);
        //if (confirmacion == JOptionPane.YES_OPTION) {
        try {

            Conexion objCon = new Conexion();
            com.mysql.jdbc.Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("DELETE FROM acta WHERE Id=? AND Nif= ? ");
            ps.setString(1, elim);
            ps.setString(2, txtnif.getText());
            ps.execute();
            /*if ("".equals(comp)) {
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun alumno");
                } else {
                    JOptionPane.showMessageDialog(null, "Alumno Dado de baja");
                }*/

        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Error al dar de baja");
            System.out.println(ex.toString());
        }
        //  tabla();
        //bajas();
        // limpiar();
        //}
    }

    private void buscarM() {
        int i = 0;
        
        System.out.println("dfvdf");
        PreparedStatement ps = null;
        ResultSet rs = null;
        String elim;
        try {
            // jtNotas.setModel(modelo);

            
            
            Conexion conn = new Conexion();
            // Connection conn = objCon.getConexion();
            java.sql.Connection con = conn.getConexion();
//ps = conn.prepareStatement("SELECT codigo, nombre, precio, cantidad FROM producto WHERE codigo=?");

            //rs = ps.executeQuery();
            String sql = "SELECT *FROM matricula WHERE  Nif = ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, txtnif.getText());
            rs = ps.executeQuery();

            //  ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            // int cantidadColumnas = rsMd.getColumnCount();
            //modelo.addColumn("Direccion");
            // Object[] fila = new Object[7];
            /* fila[3] = cbochofer.getSelectedItem().toString();
            fila[4] = txtnac.getText();
            fila[5] = txtdisco.getText();
            fila[6] = cboestado.getSelectedItem().toString();
               // modelo.addRow(fila);
             */
            // String vacio,vacio1 = "",vacio2 = "";
            while (rs.next()) {
                elim = rs.getString("Id");
                System.out.println(elim);
                eliminarmatr(elim);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

    }

    private void eliminarmatr(String elim1) {

        PreparedStatement ps = null;
        // txtId.setText("");
        //int Fila = tablausuarios.getSelectedRow();
        String comp = txtId.getText();
        //int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea dar de baja a este alumno?", "Confirmación", JOptionPane.YES_NO_OPTION);
        //if (confirmacion == JOptionPane.YES_OPTION) {
        try {

            Conexion objCon = new Conexion();
            com.mysql.jdbc.Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("DELETE FROM matricula WHERE Id=? AND Nif=?");
            ps.setString(1, elim1);
            ps.setString(2, txtnif.getText());

            ps.execute();
            /*if ("".equals(comp)) {
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun alumno");
                } else {
                    JOptionPane.showMessageDialog(null, "Alumno Dado de baja");
                }*/

        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Error al dar de baja");
            System.out.println(ex.toString());
        }
        //  tabla();
        //bajas();
        // limpiar();
        //}
    }
    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        PreparedStatement ps = null;
        // txtId.setText("");
        //int Fila = tablausuarios.getSelectedRow();
        String comp = txtId.getText();
        int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea dar de baja a este alumno?", "Confirmación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            buscarM();
            buscarA();
           
            try {

                eliminarTit();

                Conexion objCon = new Conexion();
                com.mysql.jdbc.Connection conn = objCon.getConexion();
                ps = conn.prepareStatement("DELETE FROM gestion_alumnos WHERE nif=?");
                ps.setString(1, txtnif.getText());
                ps.execute();
                if ("".equals(comp)) {
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun alumno");
                } else {
                    JOptionPane.showMessageDialog(null, "Alumno Dado de baja");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al dar de baja");
                System.out.println(ex.toString());
            }

            //  tabla();
            //bajas();
            limpiar();
        }

    }//GEN-LAST:event_eliminarActionPerformed
    private void eliminarTit() {
        PreparedStatement ps = null;
        // txtId.setText("");
        //int Fila = tablausuarios.getSelectedRow();
        String comp = txtId.getText();
        //int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea dar de baja a este alumno?", "Confirmación", JOptionPane.YES_NO_OPTION);
        //if (confirmacion == JOptionPane.YES_OPTION) {
        try {

            Conexion objCon = new Conexion();
            com.mysql.jdbc.Connection conn = objCon.getConexion();
            ps = conn.prepareStatement("DELETE FROM titulacion WHERE Id=?");
            ps.setString(1, txtnif.getText());
            ps.execute();
            /*if ("".equals(comp)) {
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun alumno");
                } else {
                    JOptionPane.showMessageDialog(null, "Alumno Dado de baja");
                }*/

        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Error al dar de baja");
            System.out.println(ex.toString());
        }

        //  tabla();
        //bajas();
        // limpiar();
        //}
    }

    private void limpiar() {
        txtcedula.setText("");
        txtnif.setText("");
        txtnombre.setText("");
        txttelefono.setText("");
        txtcalificaciones.setText("");
        txtnac.setText("");
        txtId.setText("");

    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(null, "Debe ingresar en el formato AAAA-MM-DD");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtnifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnifActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnifActionPerformed

    private void txtnifKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnifKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnifKeyTyped

    private void txtcalificacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcalificacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcalificacionesActionPerformed

    private void txtcalificacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcalificacionesKeyTyped
        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtcalificacionesKeyTyped
    private boolean validaIngresos(java.awt.event.KeyEvent evt, int num) {

        char validar = evt.getKeyChar();
        if (num == 1) {
            if (Character.isDigit(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        } else {
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        }

        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGestionAlumnoAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGestionAlumnoAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGestionAlumnoAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGestionAlumnoAdm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGestionAlumnoAdm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTguardar;
    private javax.swing.JPanel JPNregistrar;
    private javax.swing.JLabel LBLusuarios;
    private javax.swing.JButton Modificar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblCedula1;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblFechaNac1;
    private javax.swing.JLabel lblFechaNac2;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtcalificaciones;
    private javax.swing.JTextField txtcedula;
    private javax.swing.JTextField txtnac;
    private javax.swing.JTextField txtnif;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables
}
