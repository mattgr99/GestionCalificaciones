/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectogestion_calificaciones;

import Atxy2k.CustomTextField.RestrictedTextField;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author matgr
 */
public class FrmNotas extends javax.swing.JFrame {

    calculadora m = new calculadora();
    DefaultTableModel modelo = new DefaultTableModel();
    int cal = 1, cal1 = 2, cal2 = 3;

    /**
     * Creates new form FrmNotas
     */
    public FrmNotas() {
        initComponents();
        RestrictedTextField r = new RestrictedTextField(txtnota1);
        r.setLimit(5);
        RestrictedTextField r1 = new RestrictedTextField(txtnota2);
        r1.setLimit(5);
        RestrictedTextField r2 = new RestrictedTextField(txtnota3);
        r2.setLimit(5);
         txtnota4.setVisible(false);
        jtNotas.setModel(modelo);
        try {

            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            java.sql.Connection con = conn.getConexion();

            String sql = "SELECT  Nombre FROM grupos";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            while (rs.next()) {

                for (int i = 0; i < cantidadColumnas; i++) {
                    cbogrupo.addItem("" + rs.getObject(i + 1));
                }

            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Asignatura");
        modelo.addColumn("Nota 1");
        modelo.addColumn("Nota 2");
        modelo.addColumn("Nota 3");
        //modelo.addColumn("Promedio");
        int[] anchos = {50, 70, 110, 18, 18, 18};
        for (int j = 0; j < jtNotas.getColumnCount(); j++) {
            jtNotas.getColumnModel().getColumn(j).setPreferredWidth(anchos[j]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LBLusuarios = new javax.swing.JLabel();
        cbogrupo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtNotas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtnota1 = new javax.swing.JTextField();
        txtid = new javax.swing.JLabel();
        txtnombre = new javax.swing.JLabel();
        txtasignatura = new javax.swing.JLabel();
        JBTguardar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtnota2 = new javax.swing.JTextField();
        txtnota3 = new javax.swing.JTextField();
        txtnota4 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        LBLusuarios.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        LBLusuarios.setText("      Notas");

        cbogrupo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccione" }));
        cbogrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbogrupoActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione el acta de la asignatura:");

        jtNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Asignatura"
            }
        ));
        jtNotas.setToolTipText("");
        jtNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtNotasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtNotas);

        jLabel2.setText("Id:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Asignatura:");

        jLabel6.setText("Nota 1:");

        txtnota1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnota1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtnota1FocusLost(evt);
            }
        });
        txtnota1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnota1KeyTyped(evt);
            }
        });

        txtid.setText("...");

        txtnombre.setText("...");

        txtasignatura.setText("...");

        JBTguardar.setText("Registrar Notas");
        JBTguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTguardarActionPerformed(evt);
            }
        });

        jLabel7.setText("Nota 2:");

        jLabel8.setText("Nota 3:");

        txtnota2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnota2FocusGained(evt);
            }
        });
        txtnota2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnota2KeyTyped(evt);
            }
        });

        txtnota3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnota3FocusGained(evt);
            }
        });
        txtnota3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnota3KeyTyped(evt);
            }
        });

        txtnota4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtnota4FocusGained(evt);
            }
        });
        txtnota4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnota4KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(95, 95, 95)
                        .addComponent(cbogrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(269, 269, 269))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(167, 167, 167))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtasignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnota1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnota2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnota3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(LBLusuarios)
                                .addGap(388, 388, 388))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtnota4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(JBTguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(213, 213, 213))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LBLusuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbogrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtasignatura, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtnota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(123, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtnota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JBTguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtnota4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbogrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbogrupoActionPerformed
        for (int i = jtNotas.getRowCount() - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
        /*borrar = jtProductos.getRowCount();
        if (borrar == 1) {

            modelo.removeRow(0);

        } else {
            for (int i = 0; i < jtProductos.getRowCount(); i++) {
                modelo.removeRow(i);
            }
            // modelo.removeRow(0);
            // modelo.removeRow(0);
        }

        //  borrar = 1*/;

        tabla();
    }//GEN-LAST:event_cbogrupoActionPerformed

    private void jtNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtNotasMouseClicked

        PreparedStatement ps = null;
        ResultSet rs = null;
        m.hide();

        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();

            int Fila = jtNotas.getSelectedRow();
            String codigo = jtNotas.getValueAt(Fila, 0).toString();
            String materia = jtNotas.getValueAt(Fila, 2).toString();
            ps = conn.prepareStatement("SELECT * FROM matricula WHERE Nif=? AND Asignatura=?");
            ps.setString(1, codigo);
            ps.setString(2, materia);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtid.setText(rs.getString("Nif"));
                txtnombre.setText(rs.getString("Nombre_alu"));
                txtasignatura.setText(rs.getString("Asignatura"));
                m.show();
            }

        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_jtNotasMouseClicked

    private void JBTguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTguardarActionPerformed
        PreparedStatement ps = null;
        double val;
        int a = buscar();
        try {
            String comp = "";
            System.out.println(comp);
            //int conv = Integer.parseInt(lblcupos1.getText());
            //int Fila = tablausuarios.getSelectedRow();
            String comp1 = "...";
            // String comp2 = "...";
            System.out.println(comp);
            double nt1, nt2, nt3, prom, resultado1, parteEntera;
            if ("".equals(comp)) {
                comp = "";
            }

            if ((comp1.equals(txtid.getText())) || (comp.equals(txtnota1.getText())) || (comp.equals(txtnota2.getText())) || (comp.equals(txtnota3.getText()))) {
                JOptionPane.showMessageDialog(null, "Porfavor llene todos los campos");
            } else {

                // num = Integer.parseInt(txtcedula.getText());
                val = Double.parseDouble(txtnota1.getText());
                if ((val <= 10.00) && (val >= 0.00)) {
                    try {
                        Conexion objCon = new Conexion();
                        Connection conn = objCon.getConexion();
                        // Acta p = new Acta();
                        ps = conn.prepareStatement("UPDATE acta SET Nota1=?,Nota2=?,Nota3=?,Promedio=? WHERE Nif=? AND Asignatura=?");

                        ps.setString(1, txtnota1.getText());
                        ps.setString(2, txtnota2.getText());
                        ps.setString(3, txtnota3.getText());
                        nt1 = Double.parseDouble(txtnota1.getText());
                        nt2 = Double.parseDouble(txtnota2.getText());
                        nt3 = Double.parseDouble(txtnota3.getText());
                        prom = (nt1 + nt2 + nt3) / 3;
                        resultado1 = prom;
                        
                        parteEntera = Math.floor(resultado1);
                        resultado1 = (resultado1 - parteEntera) * Math.pow(10, 2);
                        resultado1 = Math.round(resultado1);
                        resultado1 = (resultado1 / Math.pow(10, 2)) + parteEntera;
                        System.out.println(resultado1);
                        ps.setString(4, "" + resultado1);
                        ps.setString(5, txtid.getText());
                        ps.setString(6, txtasignatura.getText());
                        ps.execute();
                        JOptionPane.showMessageDialog(null, "Notas Registradas");
                        for (int i = jtNotas.getRowCount() - 1; i >= 0; i--) {
                            modelo.removeRow(i);
                        }
                        tabla();
                        limpiar();

                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error en el registro de notas");
                        System.out.println(ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El rango de notas es 0.00-10.00 ");
                }

                //   tabla();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Porfavor llene todos los campos");
        }
    }//GEN-LAST:event_JBTguardarActionPerformed

    private void txtnota1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota1KeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtnota1KeyTyped

    private void txtnota2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota2KeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtnota2KeyTyped

    private void txtnota3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota3KeyTyped

        if (validaIngresos(evt, 2)) {
            JOptionPane.showMessageDialog(null, "Este campo no acepta letras");
        }
    }//GEN-LAST:event_txtnota3KeyTyped

    private void txtnota1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnota1FocusGained
        txtnota4.setText("1");

    }//GEN-LAST:event_txtnota1FocusGained

    private void txtnota2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnota2FocusGained
        //calculadora m = new calculadora(2);
        txtnota4.setText("2");

    }//GEN-LAST:event_txtnota2FocusGained

    private void txtnota3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnota3FocusGained
        //calculadora m = new calculadora(3);
        txtnota4.setText("3");

    }//GEN-LAST:event_txtnota3FocusGained

    private void txtnota4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnota4FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnota4FocusGained

    private void txtnota4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota4KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnota4KeyTyped

    private void txtnota1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtnota1FocusLost

// TODO add your handling code here:
    }//GEN-LAST:event_txtnota1FocusLost
    public void tabla() {
        int i = 0;
        //
        try {
            jtNotas.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion conn = new Conexion();
            // Connection conn = objCon.getConexion();
            java.sql.Connection con = conn.getConexion();
//ps = conn.prepareStatement("SELECT codigo, nombre, precio, cantidad FROM producto WHERE codigo=?");

            //rs = ps.executeQuery();
            String sql = "SELECT * FROM acta WHERE Asignatura = ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, cbogrupo.getSelectedItem().toString());
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            // int cantidadColumnas = rsMd.getColumnCount();

            //modelo.addColumn("Direccion");
            // Object[] fila = new Object[7];
            /* fila[3] = cbochofer.getSelectedItem().toString();
            fila[4] = txtnac.getText();
            fila[5] = txtdisco.getText();
            fila[6] = cboestado.getSelectedItem().toString();
               // modelo.addRow(fila);
             */
            String vacio,vacio1 = "",vacio2 = "";
            while (rs.next()) {
                Object[] filas = new Object[6];

                filas[0] = rs.getString("Nif");
                filas[1] = rs.getString("Nombre");
                filas[2] = rs.getString("Asignatura");
                vacio = rs.getString("Nota1");
                vacio1 = rs.getString("Nota2");
                vacio2 = rs.getString("Nota3");
                if (vacio.equals("0.00")) {
                    filas[3] = "";
                } else {
                    filas[3] = rs.getString("Nota1");;
                }
                if (vacio1.equals("0.00")) {
                    filas[4] = "";
                } else {
                    filas[4] = rs.getString("Nota2");;
                }
                if (vacio2.equals("0.00")) {
                    filas[5] = "";
                } else {
                    filas[5] = rs.getString("Nota3");;
                }
                //filas[6] = rs.getString("Nota1");;
                i++;
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    private int buscar() {
        PreparedStatement ps = null;
        ResultSet rs = null;
        int c = 0;
        try {
            Conexion objCon = new Conexion();
            Connection conn = objCon.getConexion();

            int Fila = jtNotas.getSelectedRow();
            //String codigo = jtProductos.getValueAt(Fila, 0).toString();
            //String materia = jtProductos.getValueAt(Fila, 2).toString();
            ps = conn.prepareStatement("SELECT * FROM acta WHERE Nif=? AND Asignatura=?");
            ps.setString(1, txtid.getText());
            ps.setString(2, txtasignatura.getText());
            rs = ps.executeQuery();

            while (rs.next()) {
                c = 1;

            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return c;
    }

    private void limpiar() {
        //txtcedula.setText("");
        txtid.setText("...");
        txtnombre.setText("...");
        txtasignatura.setText("...");
        txtnota1.setText("");
        txtnota2.setText("");
        txtnota3.setText("");

    }

    private boolean validaIngresos(java.awt.event.KeyEvent evt, int num) {

        char validar = evt.getKeyChar();
        if (num == 1) {
            if (Character.isDigit(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        } else {
            if (Character.isLetter(validar)) {
                getToolkit().beep();
                evt.consume();
                return true;
            }
        }

        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmNotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBTguardar;
    private javax.swing.JLabel LBLusuarios;
    private javax.swing.JComboBox<String> cbogrupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtNotas;
    private javax.swing.JLabel txtasignatura;
    private javax.swing.JLabel txtid;
    private javax.swing.JLabel txtnombre;
    public static javax.swing.JTextField txtnota1;
    public static javax.swing.JTextField txtnota2;
    public static javax.swing.JTextField txtnota3;
    public static javax.swing.JTextField txtnota4;
    // End of variables declaration//GEN-END:variables
}
